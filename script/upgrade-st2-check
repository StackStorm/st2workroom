#!/usr/bin/env sh
set -e

DIR=$( dirname "$(readlink -f "$0")" )
. $DIR/shared-functions

TEST_PACKAGE="st2common"

##
# Test for st2 being installed by looking for the st2common package.
# It is likely that st2 i.e. the client could be installed standalone.
##
is_st2_installed() {
    local __resultvar=$1
    eval $__resultvar=false
    if [ "$OS" = "Linux" ]; then
        if [ "$DIST" = "Debian" ]; then
            dpkg -s ${TEST_PACKAGE} >> /dev/null
        elif [ "$DIST" = "RedHat" ]; then
            rpm -qa ${TEST_PACKAGE} | grep ${TEST_PACKAGE} >> /dev/null
        fi
    fi

    if [ $? -eq 0 ]; then
        eval $__resultvar=true
    fi
}

is_st2_installed WARN_ABOUT_UPDATE

# If st2 is not installed then exit immediately
if [ ${WARN_ABOUT_UPDATE} = false ]; then
    exit 0
fi

PROJECT_ROOT=/opt/puppet
ANSWERS_FILE_YAML=${PROJECT_ROOT}/hieradata/answers.yaml
ANSWERS_FILE_JSON=${PROJECT_ROOT}/hieradata/answers.json
ANSWERS_FILE=""

if [ -f ${ANSWERS_FILE_YAML} ]; then
    ANSWERS_FILE=${ANSWERS_FILE_YAML}
elif [ -f ${ANSWERS_FILE_JSON} ]; then
    ANSWERS_FILE=${ANSWERS_FILE_JSON}
fi

grep "st2::version" ${ANSWERS_FILE} >> /dev/null && grep "st2::revision" ${ANSWERS_FILE} >> /dev/null
# Safe to exit if version and revision are defined in answers
if [ $? -eq 0 ]; then
    exit 0
fi

# Once it is known that st2 is installed it is safe to assume that the client is present.
INSTALLED_VERSION_REVISION=`st2 --version 2>&1 | awk -F \' '{print $2}'`

HIERA_ST2_YAML=${PROJECT_ROOT}/hieradata/role/st2.yaml
if [ ! -f ${HIERA_ST2_YAML} ]; then
    echo "Could not find ${HIERA_ST2_YAML} so cannot perform version checks."
    exit 0
fi

HIERA_ST2_VERSION=`grep "st2::version" ${HIERA_ST2_YAML} | awk -F: '{print $4}' |  sed -e 's/^[ \t]*//'`
HIERA_ST2_REVISION=`grep "st2::revision" ${HIERA_ST2_YAML} | awk -F: '{print $4}' |  sed -e 's/^[ \t]*//'`

TO_BE_INSTALLED_VERSION_REVISION="${HIERA_ST2_VERSION}.${HIERA_ST2_REVISION}"

if [ ${INSTALLED_VERSION_REVISION} = ${TO_BE_INSTALLED_VERSION_REVISION} ]; then
    exit 0
fi

echo "We noticed that the currently installed version ${INSTALLED_VERSION_REVISION} and to be installed version ${TO_BE_INSTALLED_VERSION_REVISION}"
echo "of StackStorm are different. Version ${TO_BE_INSTALLED_VERSION_REVISION} will overwrite version ${INSTALLED_VERSION_REVISION}. To avoid an"
echo "unintentional change of version, please follow instructions from <KB> and hit 'n'."
echo

while true; do
    read -p "Do you wish to overwrite with version ${TO_BE_INSTALLED_VERSION_REVISION}? [Y/n]" yn
    case $yn in
        [Y] ) exit 0;;
        [Nn] ) exit 1;;
        * ) echo "Please answer Y or n.";;
    esac
done
