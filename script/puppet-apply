#!/usr/bin/env bash
set -e
set -o pipefail

DIR=$( dirname "$(readlink -f "$0")" )
source $DIR/shared-functions

source "$(project-root)/script/lib/puppet-apply.d/help"
source "$(project-root)/script/lib/puppet-apply.d/environment"
source "$(project-root)/script/lib/puppet-apply.d/bootstrap"

# Main init
init-puppet-apply() {
    if ! is-root; then
        show-help
        fail-loudly "Please run with root permissions"
    fi

    git-update-and-clean $(project-root)
    run-preflight-os
    bootstrap-st2workroom

    if install-puppet-st2-branch; then
        bootstrap-puppet-st2
    fi

    run-puppet
}

# Main entry point for script
while :; do
    case $1 in
        -h|-\?|--help)
            show_help
            exit
            ;;
        -d|--debug)
            DEBUG=true
            shift
            continue
            ;;
        -e|--environment)
            if [ -n "$2" ]; then
                ENV=$2
                shift 2
                continue
            else
                printf 'ERROR "--environment" requires a non-empty argument.\n'
            fi
            ;;
        -s|--st2-puppet-branch)
            if [ -n "$2" ]; then
                PUPPET_ST2_BRANCH=$2
                shift 2
                continue
            else
                printf 'ERROR "--st2-puppet-branch" requires a non-empty argument.\n'
            fi
            ;;
        -t|--trace)
            set -x
            shift
            continue
            ;;
        --)
            shift
            break
            ;;
        -?*)
            printf "WARN: unknown option ($1)... ignoring.\n"
            ;;
        *)
            break
    esac
    shift
done

init-puppet-apply
