#!/usr/bin/env bash
set -e
set -u
set -o pipefail

DIR=$( dirname "$(readlink -f "$0")" )
source $DIR/shared-functions
source $DIR/lib/puppet-apply.d/help
source $DIR/lib/puppet-apply.d/environment
source $DIR/lib/puppet-apply.d/puppet
source $DIR/lib/puppet-apply.d/bootstrap

bootstrap-st2workroom() {
    log "Setting up st2workroom in environment $(environment)"

    if local-development-mode; then
        setup-current-working-directory-environment
    else
        setup-environment-from-git-branch
    fi

    install-puppetfile

}

bootstrap-puppet-st2() {
    local _repo="https://github.com/stackstorm/st2.git"
    local _module_dir="$(environment-dir)/modules/st2"
    local _module_backup_dir="$(random-tmpdir)"
    local _git_stage_dir="$(random-tmpdir)"

    git-safe-clone $_repo $_git_stage_dir "$(puppet-st2-version)"
    safe-copy $_module_dir $_module_backup_dir
    ensure-directory-absent $_module_dir
    safe-copy $_git_stage_dir $_module_dir
}

# Main init
init() {
    if ! is-root; then
        show-help
        fail-loudly "Please run with root permissions"
    fi

    git-clean-and-update project-root
    run-preflight-os
    bootstrap-st2workroom

    if install-puppet-st2-branch; then
        bootstrap-puppet-st2
    fi

    run-puppet
}

# Main entry point for script
while :; do
    case $1 in
        -h|-\?|--help)
            show_help
            exit
            ;;
        -d|--debug)
            DEBUG=true
            shift
            continue
            ;;
        -e|--environment)
            if [ -n "$2" ]; then
                ENV=$2
                shift 2
                continue
            else
                printf 'ERROR "--environment" requires a non-empty argument.\n'
            fi
            ;;
        -s|--st2-puppet-branch)
            if [ -n "$2" ]; then
                PUPPET_ST2_BRANCH=$2
                shift 2
                continue
            else
                printf 'ERROR "--st2-puppet-branch" requires a non-empty argument.\n'
            fi
            ;;
        -t|--trace)
            set -x
            continue
            ;;
        --)
            shift
            break
            ;;
        -?*)
            printf "WARN: unknown option ($1)... ignoring.\n"
            ;;
        *)
            break
    esac
    shift
done

init
