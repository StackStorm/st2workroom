#!/usr/bin/env bash

git-ref-type() {
    local _git_ref=
    local _git_root_dir=
    _git_ref="${1:?}"
    _git_root_dir="${2:?}"

    if git show-ref -q --verify "refs/heads/${_git_ref}" 2>/dev/null; then
        echo "branch"
    elif git show-ref -q --verify "refs/tags/${_git_ref}" 2>/dev/null; then
        echo "tag"
    elif git show-ref -q --verify "refs/remote/${_git_ref}" 2>/dev/null; then
        echo "remote"
    elif git rev-parse --verify "${_git_ref}^{commit}" >/dev/null 2>&1; then
        echo "hash"
    else
        echo "unknown"
    fi
    return 0
}

git-ref-is-branch() {
    local _dir=
    local _branch=
    local _ref_type=
    local _dir="${1:?}"
    local _branch="${2:?}"

    _ref_type="$(git-ref-type $_dir $_branch)"
    if string-equals $_ref_type "branch"; then true; else false; fi
}

git-ref-is-tag() {
    local _dir=
    local _branch=
    local _ref_type=
    local _dir="${1:?}"
    local _branch="${2:?}"

    _ref_type="$(git-ref-type $_dir $_branch)"
    if string-equals $_ref_type "tag"; then true; else false; fi
}

safe-git-clone() {
    local _repo=
    local _dest_dir=
    local _branch=
    _repo="${1:?}"
    _dest_dir="${2:?}"
    _branch="${3:-master}"

    if directory-exists $_dest_dir; then
        safe-copy $_dest_dir random-tmpdir
        ensure-directory-absent $_dest_dir
    fi

    git clone $_repo $_dest_dir -b $_branch
}

destructive-git-clone() {
    local _repo=
    local _dest_dir=
    local _branch=
    _repo="${1:?}"
    _dest_dir="${2:?}"
    _branch="${3:-master}"

    ensure-directory-absent $_dest_dir
    safe-git-clone $_repo $_dest_dir $_branch
}

git-update-and-clean-hard() {
    local _dir=
    local _branch=
    _dir="${1:?}"
    _branch="${2:master}"

    git-update-and-clean $_dir
    git-hard-reset $_dir $_branch
}

git-update-and-clean() {
    pushd-quiet "${1:?}"

    git fetch --all
    git gc --auto

    pushd-quiet +1
}

git-hard-reset() {
    local _dir=
    local _branch=
    _dir="${1:?}"
    _branch="${2:master}"

    pushd-quiet $_dir

    git reset --hard $_branch

    pushd-quiet +1
}
