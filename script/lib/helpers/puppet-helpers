#!/usr/bin/env bash

install-puppet-libraries() {
    local _work_root="${1:?}"
    local _log_dest=
    local _debug_args=
    local _args=

    pushd-quiet environment-dir

    if debug-enabled; then
        $_debug_args="--verbose";
        $_log_dest="$(send-output-to-file-and-stdout log-file)"
    else
        $_log_dest="$(send-all-output-to log-file)"
    fi
    $_args="${_debug_args} ${_log_dest}"
    $_cmd="librarian-puppet install --shared ${_args}"

    debug "Running librarian-puppet in ${_work_root} with ${_args}"
    execute-string $_cmd

    pushd-quiet +1
}

run-puppet() {
    local _debug_args=
    local _graph_args=
    local _env_args="--environment $(sanitized-puppet-environment-to-apply)"
    local _config_args="--config $(project-root)/puppet.conf"
    local _manifest_args="$(environment-dir)/manifests"
    local _args=
    local _log_dest=

    if debug-enabled; then
        ensure-directory-exists environment-graph-dir
        $_graph_args="--graph --graphdir $(node-graph-dir)"
        $_debug_args="--debug --verbose"
        $_log_dest="$(send-output-to-file-and-stdout log-file)"
    else
        $_log_dest="$(send-all-output-to log-file)"
    fi

    $_args="$_env_args $_config_args $_manifest_args $_debug_args $_graph_args"
    $_cmd="puppet apply ${_args}"

    debug "Running `puppet apply` with args: ${_args}"
    eval $_cmd
}

install-puppetfile() {
    run-librarian-puppet environment-dir
}

facter-has-value() {
    variable-set facter-value "${1:?}"
}

facter-value() {
    echo "$(project-root)/bin/facter ${1:?}"
}
